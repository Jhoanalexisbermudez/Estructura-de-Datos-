

class Nodo {
    String nombre;
    int puntaje;
    Nodo anterior, siguiente;

    Nodo(String nombre, int puntaje) {
        this.nombre = nombre;
        this.puntaje = puntaje;
    }
}

class ListaDoblementeEnlazada {
    Nodo cabeza, cola;

    void agregarJugador(String nombre, int puntaje) {
        Nodo nuevo = new Nodo(nombre, puntaje);
        if (cabeza == null) {
            cabeza = cola = nuevo;
        } else {
            Nodo actual = cabeza;
            while (actual != null && actual.puntaje >= puntaje) {
                actual = actual.siguiente;
            }
            if (actual == cabeza) {
                nuevo.siguiente = cabeza;
                cabeza.anterior = nuevo;
                cabeza = nuevo;
            } else if (actual == null) {
                cola.siguiente = nuevo;
                nuevo.anterior = cola;
                cola = nuevo;
            } else {
                nuevo.siguiente = actual;
                nuevo.anterior = actual.anterior;
                actual.anterior.siguiente = nuevo;
                actual.anterior = nuevo;
            }
        }
        limitarTop5();
    }

    void limitarTop5() {
        Nodo actual = cabeza;
        int contador = 1;
        while (actual != null && contador < 5) {
            actual = actual.siguiente;
            contador++;
        }
        if (actual != null && actual.siguiente != null) {
            actual.siguiente = null;
            cola = actual;
        }
    }

    void mostrarRanking() {
        System.out.println("\n--- RANKING TOP 5 ---");
        Nodo actual = cabeza;
        int pos = 1;
        while (actual != null) {
            System.out.println(pos + ". " + actual.nombre + " - " + actual.puntaje + " pts");
            actual = actual.siguiente;
            pos++;
        }
    }
}

public class SumasRapidas {
    static Scanner sc = new Scanner(System.in);
    static Random rand = new Random();
    static ListaDoblementeEnlazada ranking = new ListaDoblementeEnlazada();

    public static void main(String[] args) {
        while (true) {
            System.out.print("Ingrese su nombre de jugador: ");
            String nombre = sc.nextLine();
            int puntaje = jugar(nombre);
            ranking.agregarJugador(nombre, puntaje);
            System.out.println("\nPuntaje final: " + puntaje);
            ranking.mostrarRanking();
            System.out.print("\n¿Desea jugar de nuevo? (s/n): ");
            String opc = sc.nextLine().toLowerCase();
            if (!opc.equals("s")) break;
        }
    }

    static int jugar(String nombre) {
        int nivel = 1;
        int tiempo = 10;
        int puntaje = 0;

        while (true) {
            System.out.println("\n--- Nivel " + nivel + " ---");
            for (int i = 1; i <= 5; i++) {
                int a = rand.nextInt(50) + 1;
                int b = rand.nextInt(50) + 1;
                int resultado = a + b;
                System.out.println("Suma " + i + ": " + a + " + " + b + " = ?");
                long inicio = System.currentTimeMillis();
                String entrada;
                try {
                    entrada = leerConTiempo(tiempo * 1000);
                } catch (Exception e) {
                    System.out.println("⏰ Tiempo agotado!");
                    return puntaje;
                }
                long fin = System.currentTimeMillis();
                if (fin - inicio > tiempo * 1000) {
                    System.out.println("⏰ Tiempo agotado!");
                    return puntaje;
                }
                int respuesta;
                try {
                    respuesta = Integer.parseInt(entrada);
                } catch (Exception e) {
                    System.out.println("❌ Entrada inválida.");
                    return puntaje;
                }
                if (respuesta == resultado) {
                    puntaje += 100;
                    System.out.println("✅ Correcto! +100 puntos");
                } else {
                    System.out.println("❌ Incorrecto.");
                    return puntaje;
                }
            }
            nivel++;
            tiempo = Math.max(2, tiempo - 2);
            System.out.println("⏩ Nivel completado. Tiempo por operación ahora: " + tiempo + " seg");
        }
    }

    static String leerConTiempo(int tiempoMs) throws Exception {
        long inicio = System.currentTimeMillis();
        while ((System.currentTimeMillis() - inicio) < tiempoMs && !sc.hasNextLine()) {
            Thread.sleep(100);
        }
        if (sc.hasNextLine()) return sc.nextLine();
        else throw new Exception("Tiempo agotado");
    }
}
